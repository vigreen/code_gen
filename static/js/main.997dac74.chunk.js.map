{"version":3,"sources":["svg/file.svg","helpers/constants.ts","helpers/functions.ts","components/Form.tsx","components/App.tsx","index.tsx"],"names":["defaultPattern","getChar","row","charAt","Math","floor","random","length","mapPattern","char","Upper","Lower","Nums","createCode","pattern","split","map","join","F","generateFn","callback","arr","keys","iteration","Object","key","generateCode","Form","useState","handlePattern","handleLength","handleArr","ptrn","lngth","saveWrapStyle","saveBtnStyle","className","src","alt","placeholder","value","onChange","e","cond","Number","isFinite","target","isNaN","trueFn","falseFn","disabled","onClick","type","data","SVG","csv","unparse","blob","Blob","saveAs","saveAsCsv","flatArr","flatMap","a","text","JSON","stringify","saveAsTxt","App","id","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.997dac74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/file.fbc45208.svg\";","export const defaultPattern = 'xXx-XxX-xXx';","import { WithCode } from '../types/type';\nimport { defaultPattern } from './constants';\n\nconst getChar = (row: string) => row.charAt(Math.floor(Math.random() * row.length));\n\nconst mapPattern = (char: string) => {\n  const Upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const Lower = 'abcdefghijklmnopqrstuvwxyz';\n  const Nums = '0123456789';\n  const characters = Upper + Lower + Nums;\n  switch (char) {\n    case \"C\": return getChar(Upper);\n    case \"c\": return getChar(Lower);\n    case 'A': return getChar(Upper + Nums);\n    case 'a': return getChar(Lower + Nums);\n    case '9': return getChar(Nums);\n    case 'x':\n    case 'X': return getChar(characters);\n  \n    default: return char;\n  }\n}\n\nexport const createCode = (pattern = defaultPattern) => pattern.split('').map(mapPattern).join('');\n\nexport const generateCode = (length: number, pattern: string) => {\n  const keys: WithCode = {};\n  let iteration = 0;\n\n  while(Object.keys(keys).length < length) {\n    const code = createCode(pattern);\n    keys[code] = true;\n    iteration++;\n\n    if (iteration / 2 > length) {\n      break;\n    }\n  }\n\n  if (iteration / 2 > length) {\n    return null;\n  }\n\n  if (Object.keys(keys).length) {\n    return Object.keys(keys).map((key) => [key]);\n  }\n\n  return null;\n}\n\nexport const ifElse = (cond: boolean, trueFn: Function, falseFn: Function) => cond === true ? trueFn() : falseFn();\nexport const F = () => false;","import React, { useState, ChangeEvent } from 'react';\nimport { saveAs } from 'file-saver';\nimport { unparse } from 'papaparse';\nimport SVG from '../svg/file.svg'\nimport { ifElse, F, createCode, generateCode } from '../helpers/functions';\nimport { defaultPattern } from '../helpers/constants';\n\nconst generateFn = (length: number, pattern: string, callback: Function) => {\n   const arr = generateCode(length, pattern);\n\n   if (typeof callback === 'function' && arr) {\n     callback(arr);\n   }\n}\n\nfunction saveAsCsv(arr: string[][]) {\n  if (arr.length > 0) {\n    const csv = unparse(arr);\n    const blob = new Blob([csv], {type: \"text/csv;charset=utf-8\"});\n    saveAs(blob, \"keys.csv\");\n  }\n}\n\nfunction saveAsTxt(arr: string[][]) {\n  if (arr.length > 0) {\n    const flatArr = arr.flatMap(a => a);\n    const text = new Blob([JSON.stringify(flatArr)], {type: \"text/plain;charset=utf-8\"});\n    saveAs(text, \"keys.txt\");\n  }\n}\n\nfunction Form() {\n  const [pattern, handlePattern] = useState<string>(defaultPattern);\n  const [length, handleLength] = useState<number>(100);\n  const [arr, handleArr] = useState<string[][]>([]);\n\n  const ptrn = pattern.length ? pattern : defaultPattern;\n  const lngth = length > 0 ? length : 1\n\n  const saveWrapStyle = arr.length > 0 ? 'save-button button-border mt-12' : 'save-button mt-12 save-button-disabled';\n  const saveBtnStyle = arr.length > 0 ? 'button' : 'button button-disabled';\n\n  return (\n    <div className=\"reg-form\">\n      <img src=\"./logo_large.svg\" alt=\"logo\" />\n      <h1 className='bold'>Generate Codes for Free using your pattern</h1>\n      <label className='input-label'>\n        <p>Number of codes</p>\n        <input placeholder='1 - 10 000' value={length} onChange={(e: ChangeEvent<HTMLInputElement>) => ifElse(Number.isFinite(+e.target.value) && !Number.isNaN(+e.target.value), () => handleLength(+e.target.value), F)}/>\n      </label>\n      <label className='input-label'>\n        <p>Pattern</p>\n        <input placeholder='Pattern' value={pattern} onChange={(e: ChangeEvent<HTMLInputElement>) => handlePattern(e.target.value)}/>\n      </label>\n      <label className='input-label'>\n        <p className='flex-title'>Code example</p>\n        <input className='input-disabled' placeholder='Example' value={createCode(pattern)} onChange={() => false} disabled />\n      </label>\n      <ul>\n\t      <li>\"A\" - uppercase number or char,</li>\n        <li>\"a\" - lowercase char or number,</li>\n        <li>\"C\" - only uppercase char,</li>\n        <li>\"c\" - only lowercase char,</li>\n        <li>\"9\" - random number,</li>\n        <li>\"x\" or \"X\" - random number or char with random style (lowercase or uppercase).</li>\n      </ul>\n      <button className=\"button button-width button-border mt-12\" onClick={() => generateFn(lngth, ptrn, handleArr)}><object type=\"image/svg+xml\" data={SVG} />Generate Codes</button>\n      <div className={saveWrapStyle}>\n      \t<button className={saveBtnStyle} onClick={() => saveAsCsv(arr)}>.csv</button>\n      \t<button className={saveBtnStyle} onClick={() => saveAsTxt(arr)}>.txt</button>\n      \t<div className=\"save-icon\"><div /></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Form;","import React from 'react';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <Form />\n      <a href=\"https://t.me/looamie\" className='author' ><img src=\"./tg.svg\" alt=\"Telegram\" />Made by @looamie</a>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}